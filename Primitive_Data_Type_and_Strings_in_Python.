{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNqzFfaQiNvQ6nZqN1PcKPW",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/suneelshivanioffical/Primitive_Data_Type_and_Strings_in_Python/blob/main/Primitive_Data_Type_and_Strings_in_Python.\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "5Vm1Wd8EXaQ6"
      },
      "outputs": [],
      "source": [
        "\n",
        "#Primitive_Type\n",
        "\n",
        "#1_Intetger\n",
        "#2_Floating\n",
        "#3_Boolean\n",
        "\n",
        "#String\n",
        "\n",
        "#1_String\n",
        "#2_Slicing_&_Indexing\n",
        "#3_String_class_methods\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Primary_Data_types_in_Python:\n",
        "\n",
        "#1_Strings (use for text analysis)\n",
        "#2_Integers\n",
        "#3_Floating\n",
        "#4_Boolean\n",
        "\n",
        "name = \"Suneel Shivani\"\n",
        "age = 21\n",
        "age2= 21.0\n",
        "yonger = True\n",
        "\n",
        "print(type(name))\n",
        "print(type(age))\n",
        "print(type(age2))\n",
        "print(type(yonger))"
      ],
      "metadata": {
        "id": "mLbe2xF7QxXs",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0cc6c037-6731-4ef5-e0a4-3b723677b10a"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'str'>\n",
            "<class 'int'>\n",
            "<class 'float'>\n",
            "<class 'bool'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#_Integer\n",
        "\n",
        "#\n",
        "\n",
        "age = 5\n",
        "print(age)\n"
      ],
      "metadata": {
        "id": "MbomBaqEuZkM",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "580e82f1-42e3-49c3-b4c9-8a2581e94c3d"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#_Floating/in_Decimal\n",
        "\n",
        "price = 100.0\n",
        "print(price)\n"
      ],
      "metadata": {
        "id": "s9M7mryHueyb",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c28e26b5-74f6-4a7e-ac6c-ad8921b58261"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#_Boolean\n",
        "\n",
        "brith_year = 1947\n",
        "age = 2024 - brith_year\n",
        "criteria = 18\n",
        "elgibilty = age >= criteria\n",
        "print(\"you elgilbilty to vote is?\", elgibilty)\n",
        "\n",
        "# Assignment 1\n",
        "\n",
        "applicant_income = 50000\n",
        "price_of_house = 100000\n",
        "discount = 10/100 #True\n",
        "\n",
        "elgibilty = applicant_income >= 50000\n",
        "print(\"You elgibilable for discount is :\", discount)"
      ],
      "metadata": {
        "id": "3YlddlrfEkZj",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d1b2ffba-73b9-4ffb-bc24-8da05682e914"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "you elgilbilty to vote is? True\n",
            "You elgibilable for discount is : 0.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#_Strings\n",
        "\n",
        "#_Print_Strings_as_output_on_screen\n",
        "\n",
        "print(\"Hello World\")\n",
        "print(\"Suneel Shivani\")\n",
        "print(\"Hello Students. \")\n",
        "print(\"Hey, Good Morning Dear.\")\n",
        "print(\"My name is Suneel.\")\n",
        "print(\"My age is 21.\")\n",
        "print(\"My name is Suneel,\", \"My age is 21.\")\n",
        "print(\"23\")\n",
        "\n"
      ],
      "metadata": {
        "id": "ZbkBaTPsyj5X",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "15fffd00-5168-4bfa-e460-90718880bd62"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Hello World\n",
            "Suneel Shivani\n",
            "Hello Students. \n",
            "Hey, Good Morning Dear.\n",
            "My name is Suneel.\n",
            "My age is 21.\n",
            "My name is Suneel, My age is 21.\n",
            "23\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#_String_Slicing\n",
        "\n",
        "#\n",
        "\n",
        "str = email = \"username@domain.com\"\n",
        "print(str[0:8])\n",
        "print(str[:4]) #_print(str[0:4])\n",
        "print(str[9:]) #_print(str[9:len(str)])\n",
        "\n",
        "#\n",
        "\n",
        "str = name ='Aleem'\n",
        "print(str[0:5]) #RangeFind"
      ],
      "metadata": {
        "id": "RCpGkhBeLNdD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9d33edc5-48b5-47a1-e040-cf7dceaf0f16"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "username\n",
            "user\n",
            "domain.com\n",
            "Aleem\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#_String_Indexing\n",
        "\n",
        "str = name = \"Suneel Shivani\"\n",
        "\n",
        "print(str[0])\n",
        "print(str[8])\n",
        "print(str[9])"
      ],
      "metadata": {
        "id": "IhifmFLfLm0A",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2ce63b52-1322-4b53-c70b-3aa2be429be3"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "S\n",
            "h\n",
            "i\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#_String_class_methods_OR_#_Strings_functions\n",
        "\n",
        "#_\n",
        "\n",
        "str = name = \"Suneel Shivani\"\n",
        "\n",
        "print(name.upper())\n",
        "print(name.lower())\n",
        "print(name.find('h'))\n",
        "\n",
        "print(name.replace(\"Shivani\", \"Sharma\" ))\n",
        "print(\"i\" in name)\n",
        "print(name.index('e'))\n",
        "print(name.count('i'))\n",
        "\n",
        "print(len(str)) #_Find_the_Lenght_of_words.\n",
        "\n",
        "#_\n",
        "\n",
        "email = 'xyz@domain.com'\n",
        "domain_name = email.split(\"@\")\n",
        "print(domain_name)\n"
      ],
      "metadata": {
        "id": "xBnPJST4naSC",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "614e728c-469a-46b1-dbd1-e6b4588a5286"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "SUNEEL SHIVANI\n",
            "suneel shivani\n",
            "8\n",
            "Suneel Sharma\n",
            "True\n",
            "3\n",
            "2\n",
            "14\n",
            "['xyz', 'domain.com']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "VaW7r4g9Lmiu"
      }
    }
  ]
}